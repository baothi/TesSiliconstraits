I"D(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Profile = (function() {
    function Profile() {
      this.updatePreview = bind(this.updatePreview, this);
      this.update = bind(this.update, this);
      this.AvatarCropper();
      this.imagepreview();
      this.update(coords);
      updatePreview(coords);
    }

    Profile.prototype.AvatarCropper = function() {
      return $('#cropbox').Jcrop({
        aspectRatio: 1,
        setSelect: [0, 0, 600, 600],
        onSelect: this.update,
        onChange: this.update
      });
    };

    Profile.prototype.update = function(coords) {
      $('#user_crop_x').val(coords.x);
      $('#user_crop_y').val(coords.y);
      $('#user_crop_w').val(coords.w);
      $('#user_crop_h').val(coords.h);
      return this.updatePreview(coords);
    };

    Profile.prototype.updatePreview = function(coords) {
      return $('#preview').css({
        width: Math.round(100 / coords.w * $('#cropbox').width()) + 'px',
        height: Math.round(100 / coords.h * $('#cropbox').height()) + 'px',
        marginLeft: '-' + Math.round(100 / coords.w * coords.x) + 'px',
        marginTop: '-' + Math.round(100 / coords.h * coords.y) + 'px'
      });
    };

    Profile.prototype.imagepreview = function() {
      var preview;
      $(document).ready(function() {});
      preview = $('.upload-preview img');
      $('.file').change(function(event) {
        var file, input, reader;
        input = $(event.currentTarget);
        file = input[0].files[0];
        reader = new FileReader;
        reader.onload = function(e) {
          var image_base64;
          image_base64 = e.target.result;
          preview.attr('src', image_base64);
        };
        reader.readAsDataURL(file);
      });
    };

    return Profile;

  })();

}).call(this);
:ET